BlueZ D-Bus GATT API description
********************************


Service hierarchy
=================

GATT remote and local service representation. Object path for local
services are freely definable.

Local Services already implemented by the core should NOT be re-declared
as external GATT service.

Service		org.bluez
Interface	org.bluez.Service1
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX/serviceXX

Properties	string UUID [read-only]

			UUID-128 string format of the GATT based service. It
			represents the UUID of a local external service or
			remote GATT service.

		array{object} Includes [read-only]: Not implemented

			Array of objects paths representing the included
			services of this service.


Characteristic hierarchy
========================

GATT local and remote services share the same high-level D-Bus API.
Some properties are applied to local implementations only, especially
the properties related to security.

For local GATT defined services, the object paths need to follow the
service path hierarchy and freely defineable.

Service		org.bluez
Interface	org.bluez.Characteristic1
Object path	[variable prefix]/{hci0,hci1,...}/dev_XX_XX_XX_XX_XX_XX/serviceXX/charYYYY


Methods

Properties	string UUID [read-only]

			UUID-128 string format of the GATT characteristic. It
			represents the UUID of a local external characteristic
			or remote GATT characteristic.

		array{byte} Value [read-write, optional]

			Cached Value of the characteristic, if present, the
			value will be cached by bluetoothd and updated when
			the PropertyChanged is emitted.

		byte Flags [read-only, optional]

			Bit field which determines how the Characteristic Value
			can be used. See Core spec page 1898, "Table 3.5:
			Characteristic Properties bit field"

		array{dict} Descriptors [read-write, optional]: Not implemented

		{
			"uuid": string [mandatory]
			"value": array{byte} [mandatory]
			"permissions": byte [optional]
		}
		{
			...
		}

ServiceManager hierarchy
========================

ServiceManager allows external applications to register GATT based services.
Services should follow the API for Service and Characteristic described above.

For GATT local services, services and characteristics definitions are fetched
automatically by BlueZ using D-Bus Object Manager. BlueZ core is responsible
for managing ATT requests translating to D-Bus messages and signals to interact
with the external GATT local service implementation.

Service		org.bluez
Interface	org.bluez.ServiceManager1
Object path	/

Methods		RegisterApplication(object application, dict options)

			Registers remote application services exported under
			the interface Service1. Characteristics objects must
			be hierarchical to its service and it must use the
			interface Characteristic1. D-Bus Object Manager is
			used to fetch the exported objects.

			"application" object path together with the D-Bus system
			bus connection id define the identification of the
			application registering a GATT based service.

		UnregisterApplication(object application)

			This unregisters the application that has been
			previously registered. The object path parameter
			must match the same value that has been used
			on registration.
